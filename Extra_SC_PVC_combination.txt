âœ… 1. PVC Without StorageClass â†’ Uses Default (Dynamic) Provisioning
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: default-sc-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
â€¢	Since no storageClassName is specified,
â€¢	Kubernetes will use the default StorageClass (determined by annotation):
apiVersion: storage.k8s.io/v1           # API version for storage class
kind: StorageClass                      # Declares a StorageClass object
metadata:
  name: default                         # Name of the storage class
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"              # Marks this as the default
provisioner: kubernetes.io/azure-disk                                    # Azure Disk provisioner (in-tree driver)
volumeBindingMode: WaitForFirstConsumer                        # Wait until Pod is scheduled before binding disk
reclaimPolicy: Delete                                                            # Delete the disk when PVC is deleted , or Retain also

ðŸ”¹ This will dynamically provision a Standard_LRS managed disk using Azure Disk.
________________________________________
âœ… 2. PVC with Explicit StorageClass
You can choose the StorageClass based on your need:
âœ… PVC for managed-premium StorageClass
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: managed-premium-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 10Gi

ðŸ”· a) AKS-Provided "managed-premium" (SSD performance)
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-premium
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: kubernetes.io/azure-disk
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete   ####  It  can Retain or  Delete
allowVolumeExpansion: true
parameters:
  storageaccounttype: Premium_LRS
  kind: Managed
â€¢	Use this by specifying storageClassName: managed-premium in your PVC.
â€¢	It provisions Premium SSDs.
â€¢	Deletes the disk automatically when PVC is deleted.
________________________________________
SO  here      storageclass.kubernetes.io/is-default-class: "false" and  in the PVC mapping  storageClassName: managed-premium and SC name : managed-premium  we  can  asisign  any  name  no issue.
Bind me to a volume using the StorageClass named managed-premium.

âœ…3. PVC for custom mongo-storage StorageClass
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: mongo-storage
  resources:
    requests:
      storage: 10Gi

ðŸ”· b) Custom StorageClass: mongo-storage (Retain policy, user-defined)

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongo-storage
provisioner: kubernetes.io/azure-disk
allowVolumeExpansion: true
reclaimPolicy: Retain
parameters:
  skuName: Premium_LRS
  kind: managed
â€¢	Custom class for specialized use (e.g., database like MongoDB).
â€¢	Retain keeps the disk even after PVC deletion.
â€¢	Gives you full control; you must clean up disks manually.
________________________________________
